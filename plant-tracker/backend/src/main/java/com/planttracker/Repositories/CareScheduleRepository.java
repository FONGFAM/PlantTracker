package com.planttracker.Repositories;

import java.time.LocalDateTime;
import java.util.List;

// üëá Th√™m import cho Ph√¢n trang
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.planttracker.Models.CareSchedule;

public interface CareScheduleRepository extends JpaRepository<CareSchedule, Long> {

     /**
      * T·ªêI ∆ØU 1 (ƒê√£ s·ª≠a cho Ph√¢n trang):
      * L·∫•y c√°c l·ªãch tr√¨nh THEO plantId V√Ä CH·ªà NH·ªÆNG C√ÅI C√íN K√çCH HO·∫†T (active).
      * Tr·∫£ v·ªÅ Page thay v√¨ List.
      */
     Page<CareSchedule> findByPlant_IdAndActiveTrue(Long plantId, Pageable pageable); // ‚ú® ƒê·ªïi List -> Page, th√™m
                                                                                      // Pageable

     /**
      * T·ªêI ∆ØU 2 (ƒê√£ s·ª≠a cho Ph√¢n trang):
      * Gi·ªëng nh∆∞ h√†m c·ªßa b·∫°n, nh∆∞ng c≈©ng ch·ªâ l·∫•y c√°c l·ªãch c√≤n K√çCH HO·∫†T.
      * Tr·∫£ v·ªÅ Page thay v√¨ List.
      */
     Page<CareSchedule> findByPlant_User_UsernameAndActiveTrue(String username, Pageable pageable); // ‚ú® ƒê·ªïi List ->
                                                                                                    // Page, th√™m
                                                                                                    // Pageable

     /**
      * B·ªî SUNG 1 (Gi·ªØ nguy√™n - Th∆∞·ªùng kh√¥ng c·∫ßn ph√¢n trang):
      * T√¨m t·∫•t c·∫£ c√°c l·ªãch (c√≤n active) ƒë√£ "ƒë·∫øn h·∫°n".
      * V·∫´n tr·∫£ v·ªÅ List v√¨ th∆∞·ªùng b·∫°n mu·ªën x·ª≠ l√Ω t·∫•t c·∫£ m·ª•c ƒë·∫øn h·∫°n c√πng l√∫c.
      */
     @Query("SELECT s FROM CareSchedule s WHERE s.active = true AND s.nextAt <= :now")
     List<CareSchedule> findActiveSchedulesDue(@Param("now") LocalDateTime now);

     /**
      * B·ªî SUNG 2 (Gi·ªØ nguy√™n - Th∆∞·ªùng kh√¥ng c·∫ßn ph√¢n trang):
      * T√¨m t·∫•t c·∫£ c√°c l·ªãch "ƒë·∫øn h·∫°n" CHO M·ªòT NG∆Ø·ªúI D√ôNG C·ª§ TH·ªÇ.
      * V·∫´n tr·∫£ v·ªÅ List.
      */
     @Query("SELECT s FROM CareSchedule s WHERE s.plant.user.username = :username AND s.active = true AND s.nextAt <= :now")
     List<CareSchedule> findActiveSchedulesDueForUser(@Param("username") String username,
               @Param("now") LocalDateTime now);

     // H√†m g·ªëc (v·∫´n tr·∫£ v·ªÅ List n·∫øu b·∫°n c·∫ßn ch√∫ng kh√¥ng ph√¢n trang)
     List<CareSchedule> findByPlant_Id(Long plantId);

     List<CareSchedule> findByPlant_User_Username(String username);

     // JpaRepository ƒë√£ cung c·∫•p s·∫µn h√†m findAll(Pageable pageable)
     // Page<CareSchedule> findAll(Pageable pageable); // ‚ú® Kh√¥ng c·∫ßn khai b√°o l·∫°i
}